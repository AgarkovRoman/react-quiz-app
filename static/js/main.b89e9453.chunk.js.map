{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.css","components/Navigation/Menu Toggle/MenuToggle.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/FinishedQuiz/FinishedQuiz.module.css","components/UI/Button/Button.module.css","containers/Auth/Auth.module.css","components/UI/Input/Input.module.css","hoc/Layout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","components/UI/Loader/Loader.module.css","containers/QuizList/QuizList.module.css","containers/QuizCreator/QuizCreator.module.css","components/UI/Select/Select.module.css","components/Navigation/Menu Toggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","axios/axios-quiz.js","components/UI/Loader/Loader.js","containers/Quiz/Quiz.js","components/UI/Input/Input.js","containers/Auth/Auth.js","containers/QuizList/QuizList.js","form/formFramework.js","components/UI/Select/Select.js","containers/QuizCreator/QuizCreator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","links","to","label","exact","Drawer","clickHandler","onClose","map","link","index","key","activeClassName","active","this","close","Fragment","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","axios","create","baseURL","Loader","Quiz","isFinished","activeQuestion","answerState","loading","onAnswerClickHandler","answerId","rightAnswerId","timeout","window","setTimeout","isQuizFinished","clearTimeout","retryHandler","get","match","params","response","data","console","log","QuizWrapper","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","a","authData","returnSecureToken","post","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","forEach","name","isValid","trim","is","errorVessage","onSubmit","AuthForm","renderInputs","QuizList","quizes","renderQuizes","createControl","config","validate","validateForm","hasOwnProperty","Select","options","option","createOptionControl","number","createFormControls","option1","option2","option3","option4","QuizCreator","addQuestionHandler","concat","questionItem","createQuizHandler","changeHandler","selectChangeHandler","select","renderControls","App","path","component","Boolean","location","hostname","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b89e9453.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__2BlOY\",\"close\":\"Drawer_close__1Cl1X\",\"active\":\"Drawer_active__35KPu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__1KUEa\",\"open\":\"MenuToggle_open__36-9h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__18Rwf\",\"QuizWrapper\":\"Quiz_QuizWrapper__c8INT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__Dpsgu\",\"Question\":\"ActiveQuiz_Question__18iOr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__3PJVi\",\"success\":\"AnswerItem_success__30eEE\",\"error\":\"AnswerItem_error___hrWf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__D-CkC\",\"success\":\"FinishedQuiz_success__jBBc5\",\"error\":\"FinishedQuiz_error__KSdom\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"success\":\"Button_success__cnhtV\",\"error\":\"Button_error__2nDvg\",\"primary\":\"Button_primary__28VL_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\",\"AuthForm\":\"Auth_AuthForm__3wyhV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"invalid\":\"Input_invalid__1XscM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2BpO9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__EwYQd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__ANdA0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__a5VQi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__3jBmX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__2qylT\"};","import React from 'react'\nimport classes from './MenuToggle.module.css'\n\nconst MenuToggle = props => {\n    const cls = [\n        classes.MenuToggle,\n        'fa',\n\n    ]\n\n    if (props.isOpen) {\n        cls.push('fa-times')\n        cls.push(classes.open)\n    } else {\n        cls.push('fa-bars')\n    }\n\n    return (\n        <i\n            className={cls.join(' ')}\n            onClick={props.onToggle}\n        />\n    )\n}\n\nexport default MenuToggle","import React from 'react'\nimport classes from './Backdrop.module.css'\n\nconst Backdrop = props => {\n\n    return (\n        <div className={classes.Backdrop} onClick={props.onClick} />\n    )\n}\n\nexport default Backdrop","import React, { Component } from 'react'\nimport classes from './Drawer.module.css'\nimport Backdrop from '../../UI/Backdrop/Backdrop'\nimport { NavLink } from 'react-router-dom'\n\nconst links = [\n    { to: '/', label: 'Список', exact: true },\n    { to: '/auth', label: 'Авторизация', exact: true },\n    { to: '/quiz-creator', label: 'Создать тест', exact: true },\n]\n\nclass Drawer extends Component {\n\n    clickHandler = () => {\n        this.props.onClose()\n    }\n\n    renderLinks() {\n        return links.map((link, index) => {\n            return (\n                <li key={index}>\n                    <NavLink\n                        to={link.to}\n                        exact={link.exact}\n                        activeClassName={classes.active}\n                        onClick={this.clickHandler}\n                    >\n                        {link.label}\n                    </NavLink>\n                </li>\n            )\n        })\n    }\n\n    render() {\n        const cls = [classes.Drawer]\n\n        if (!this.props.isOpen) {\n            cls.push(classes.close)\n        }\n\n        return (\n            <React.Fragment>\n                <nav className={cls.join(' ')}>\n                    <ul>\n                        {this.renderLinks()}\n                    </ul>\n                </nav>\n                {this.props.isOpen ? <Backdrop onClick={this.props.onClose} /> : null}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Drawer","import React, { Component } from 'react'\nimport classes from './Layout.module.css'\nimport MenuToggle from '../../components/Navigation/Menu Toggle/MenuToggle'\nimport Drawer from '../../components/Navigation/Drawer/Drawer'\n\nclass Layout extends Component {\n\n    state = {\n        menu: false\n    }\n\n    toggleMenuHandler = () => {\n        this.setState({\n            menu: !this.state.menu\n        })\n    }\n\n    menuCloseHandler = () => {\n        this.setState({\n            menu: false\n        })\n    }\n\n    render() {\n        return (\n            <div className={classes.Layout}>\n\n                <Drawer\n                    isOpen={this.state.menu}\n                    onClose={this.menuCloseHandler}\n                />\n\n                <MenuToggle\n                    onToggle={this.toggleMenuHandler}\n                    isOpen={this.state.menu}\n                />\n\n                <main>\n                    {this.props.children}\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default Layout","import React from 'react'\nimport classes from './AnswerItem.module.css'\n\nconst AnswerItem = props => {\n    const cls = [classes.AnswerItem]\n\n    if (props.state) {\n        cls.push(classes[props.state])\n    }\n\n    return (\n        <li\n            className={cls.join(' ')}\n            onClick={() => props.onAnswerClick(props.answer.id)}\n        >\n            {props.answer.text}\n        </li>\n    )\n}\n\nexport default AnswerItem","import React from 'react'\nimport classes from './AnswersList.module.css'\nimport AnswerItem from './AnswerItem/AnswerItem'\n\nconst AnswersList = props => (\n    <ul className={classes.AnswersList}>\n        {props.answers.map((answer, index) => {\n            return (\n                <AnswerItem\n                    key={index}\n                    answer={answer}\n                    onAnswerClick={props.onAnswerClick}\n                    state={props.state ? props.state[answer.id] : null}\n                />\n            )\n        })}\n    </ul>\n)\n\nexport default AnswersList","import React from 'react'\nimport classes from './ActiveQuiz.module.css'\nimport AnswersList from './AnswersList/AnswersList'\n\nconst ActiveQuiz = props => (\n    <div className={classes.ActiveQuiz}>\n        <p className={classes.Question}>\n            <span>\n                <strong>{props.answerNumber}.</strong>&nbsp;\n                {props.question}\n            </span>\n\n            <small>{props.answerNumber} of {props.quizLength}</small>\n        </p>\n        <AnswersList\n            state={props.state}\n            answers={props.answers}\n            onAnswerClick={props.onAnswerClick}\n        />\n    </div>\n)\n\nexport default ActiveQuiz","import React from 'react'\nimport classes from './Button.module.css'\n\nconst Button = props => {\n    const cls = [\n        classes.Button,\n        classes[props.type],\n    ]\n    return (\n        <button\n            onClick={props.onClick}\n            className={cls.join(' ')}\n            disabled={props.disabled}\n        >\n            {props.children}\n        </button>\n    )\n}\nexport default Button","import React from 'react'\nimport classes from './FinishedQuiz.module.css'\nimport Button from '../UI/Button/Button'\nimport { Link } from 'react-router-dom'\n\nconst FinishedQuiz = props => {\n\n    const successCount = Object.keys(props.results).reduce((total, key) => {\n        if (props.results[key] === 'success') {\n            total++\n        }\n        return total\n    }, 0)\n\n    return (\n        <div className={classes.FinishedQuiz}>\n            <ul>\n                {props.quiz.map((quizItem, index) => {\n\n                    const cls = [\n                        'fa',\n                        props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\n                        classes[props.results[quizItem.id]]\n                    ]\n\n                    return (\n                        <li key={index}>\n                            <strong>{index + 1}</strong>.&nbsp;\n                            {quizItem.question}\n                            <i className={cls.join(' ')} />\n                        </li>\n                    )\n\n                })}\n            </ul>\n            <p>Правильно {successCount} из {props.quiz.length}</p>\n\n            <div>\n                <Button onClick={props.onRetry} type=\"primary\">Повторить</Button>\n                <Link to={'/'}>\n                    <Button type=\"success\">Перейти в список тестов</Button>\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default FinishedQuiz","import axios from 'axios'\n\nexport default axios.create({\n    baseURL: 'https://react-quiz-app-6f0c9.firebaseio.com/'\n})\n","import React from 'react';\nimport classes from './Loader.module.css'\n\nconst Loader = props => {\n    return (\n        <div className={classes.Loader}/>\n    )\n}\n\nexport default Loader\n","import React, { Component } from 'react'\nimport classes from './Quiz.module.css'\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz'\nimport axios from '../../axios/axios-quiz'\nimport Loader from \"../../components/UI/Loader/Loader\";\n\nclass Quiz extends Component {\n    state = {\n        results: {},\n        isFinished: false,\n        activeQuestion: 0,\n        answerState: null,\n        quiz: [],\n        loading: true,\n    }\n\n    onAnswerClickHandler = answerId => {\n        if (this.state.answerState) {\n            const key = Object.keys(this.state.answerState)[0]\n            if (this.state.answerState[key] === 'success') {\n                return\n            }\n        }\n\n        const question = this.state.quiz[this.state.activeQuestion]\n        const results = this.state.results\n\n        if (question.rightAnswerId === answerId) {\n            if (!results[question.id]) {\n                results[question.id] = 'success'\n            }\n\n            this.setState({\n                answerState: { [answerId]: 'success' }\n            })\n\n            const timeout = window.setTimeout(() => {\n                if (this.isQuizFinished()) {\n                    this.setState({\n                        isFinished: true\n                    })\n                } else {\n                    this.setState({\n                        activeQuestion: this.state.activeQuestion + 1,\n                        answerState: null,\n                    })\n                }\n\n                window.clearTimeout(timeout)\n            }, 1000)\n\n        } else {\n            results[question.id] = 'error'\n            this.setState({\n                answerState: { [answerId]: 'error' },\n                results\n            })\n        }\n\n    }\n\n    isQuizFinished() {\n        return this.state.activeQuestion + 1 === this.state.quiz.length\n    }\n\n    retryHandler = () => {\n        this.setState({\n            activeQuestion: 0,\n            answerState: null,\n            isFinished: false,\n            results: {}\n\n        })\n    }\n\n    async componentDidMount() {\n        try {\n            const response = await axios.get(`/quizes/${this.props.match.params.id}.json`)\n            const quiz = response.data\n\n            this.setState({\n                quiz,\n                loading: false,\n            })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    render() {\n        return (\n            <div className={classes.Quiz}>\n                <div className={classes.QuizWrapper}>\n                    <h1>Ответьте на вопросы</h1>\n                    {\n                        this.state.loading\n                        ?<Loader/>\n                        : this.state.isFinished\n                                ? <FinishedQuiz\n                                    results={this.state.results}\n                                    quiz={this.state.quiz}\n                                    onRetry={this.retryHandler}\n                                />\n                                : <ActiveQuiz\n                                    answers={this.state.quiz[this.state.activeQuestion].answers}\n                                    question={this.state.quiz[this.state.activeQuestion].question}\n                                    onAnswerClick={this.onAnswerClickHandler}\n                                    quizLength={this.state.quiz.length}\n                                    answerNumber={this.state.activeQuestion + 1}\n                                    state={this.state.answerState}\n                                />\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Quiz\n","import React from 'react'\nimport classes from './Input.module.css'\n\nfunction isInvalid({ valid, touched, shouldValidate }) {\n    return !valid && shouldValidate && touched\n}\n\nconst Input = props => {\n\n    const inputType = props.type || 'text'\n    const cls = [classes.Input]\n    const htmlFor = `${inputType}-${Math.random()}`\n\n    if (isInvalid(props)) {\n        cls.push(classes.invalid)\n    }\n\n    return (\n        <div className={cls.join(' ')}>\n            <label htmlFor={htmlFor}>{props.label}</label>\n            <input\n                type={inputType}\n                id={htmlFor}\n                value={props.value}\n                onChange={props.onChange}\n            />\n\n            {\n                isInvalid(props)\n                    ? <span>{props.errorMessage || 'Проверьте правильность написания '}</span>\n                    : null\n            }\n\n\n        </div>\n    )\n}\n\nexport default Input","import React, { Component } from 'react'\nimport classes from './Auth.module.css'\nimport Button from '../../components/UI/Button/Button'\nimport Input from '../../components/UI/Input/Input'\nimport is from 'is_js'\nimport axios from 'axios'\n\nexport default class Auth extends Component {\n\n    state = {\n        isFormValid: false,\n        formControls: {\n            email: {\n                value: '',\n                type: 'email',\n                label: 'Email',\n                errorMessage: 'Введите корректный email',\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    email: true,\n\n                }\n            },\n            password: {\n                value: '',\n                type: 'password',\n                label: 'Пароль',\n                errorMessage: 'Введите корректный пароль',\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    minLength: 6\n                }\n            },\n        }\n    }\n\n    loginHandler = async () => {\n        const authData = {\n            email: this.state.formControls.email.value,\n            password: this.state.formControls.password.value,\n            returnSecureToken: true,\n        }\n        try {\n            const response = await axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDqSeu5qR8vcJ7OWAKFVTN4mx78CYpJ2aA', authData)\n            console.log(response.data)\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    registerHandler = async () => {\n        const authData = {\n            email: this.state.formControls.email.value,\n            password: this.state.formControls.password.value,\n            returnSecureToken: true,\n        }\n        try {\n            const response = await axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDqSeu5qR8vcJ7OWAKFVTN4mx78CYpJ2aA', authData)\n        console.log(response.data)\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    submitHandler = event => {\n        event.preventDefault()\n    }\n\n    validateControl(value, validation) {\n        if (!validation) {\n            return true\n        }\n        let isValid = true\n\n        if (validation.required) {\n            isValid = value.trim() !== '' && isValid\n        }\n\n        if (validation.email) {\n            isValid = is.email(value) && isValid\n        }\n\n        if (validation.minLength) {\n            isValid = value.length >= validation.minLength && isValid\n        }\n\n        return isValid\n    }\n\n    onChangeHandler = (event, controlName) => {\n        const formControls = { ...this.state.formControls }\n        const control = { ...formControls[controlName] }\n\n        control.value = event.target.value\n        control.touched = true\n        control.valid = this.validateControl(control.value, control.validation)\n\n        formControls[controlName] = control\n\n        let isFormValid = true\n\n        Object.keys(formControls).forEach(name => {\n            isFormValid = formControls[name].valid && isFormValid\n        })\n\n\n        this.setState({ formControls, isFormValid })\n    }\n\n    renderInputs() {\n        return Object.keys(this.state.formControls)\n            .map((controlName, index) => {\n                const control = this.state.formControls[controlName]\n                return (\n                    <Input\n                        key={controlName + index}\n                        type={control.type}\n                        value={control.value}\n                        valid={control.valid}\n                        touched={control.touched}\n                        label={control.label}\n                        shouldValidate={!!control.validation}\n                        errorVessage={control.errorVessage}\n                        onChange={event => this.onChangeHandler(event, controlName)}\n                    />\n                )\n            })\n    }\n\n    render() {\n        return (\n            <div className={classes.Auth}>\n                <div>\n                    <h1>Авторизация</h1>\n\n                    <form onSubmit={this.submitHandler} className={classes.AuthForm}>\n\n                        {this.renderInputs()}\n\n                        <Button\n                            type='success'\n                            onClick={this.loginHandler}\n                            disabled={!this.state.isFormValid}\n                        >\n                            Войти\n                        </Button>\n                        <Button\n                            type='primary'\n                            onClick={this.registerHandler}\n                            disabled={!this.state.isFormValid}\n                        >\n                            Зарегистрироваться\n                        </Button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport classes from './QuizList.module.css'\nimport { NavLink } from 'react-router-dom'\nimport axios from '../../axios/axios-quiz'\nimport Loader from '../../components/UI/Loader/Loader'\nexport default class QuizList extends Component {\n    state = {\n        quizes: [],\n        loading: true,\n    }\n    renderQuizes() {\n        return this.state.quizes.map((quiz) => {\n            return (\n                <li\n                    key={quiz.id}\n                >\n                    <NavLink to={'/quiz/' + quiz.id}>\n                        {quiz.name}\n                    </NavLink>\n                </li>\n            )\n        })\n    }\n\n    async componentDidMount() {\n        try {\n            const response = await axios.get('/quizes.json')\n\n            const quizes = []\n            Object.keys(response.data).forEach((key, index) => {\n                quizes.push({\n                    id: key,\n                    name: `Test #${index + 1}`\n                })\n            })\n            this.setState({\n                quizes,\n                loading: false,\n            })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    render() {\n        return (\n            <div className={classes.QuizList}>\n                <div>\n                    <h1>Список тестов</h1>\n\n                    {\n                        this.state.loading\n                        ? <Loader/>\n                        : <ul>\n                             {this.renderQuizes()}\n                          </ul>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n","export function createControl(config, validation) {\n    return {\n        ...config,\n        validation,\n        valid: !validation,\n        touched: false,\n        value: '',\n    }\n}\n\nexport function validate(value, validation = null) {\n    if (!validation) {\n        return true\n    }\n    let isValid = true\n\n    if (validation.required) {\n        isValid = value.trim() !== '' && isValid\n    }\n\n    return isValid\n}\n\nexport function validateForm(formControls) {\n    let isFormValid = true\n\n    for (let control in formControls) {\n        if (formControls.hasOwnProperty(control)) {\n            isFormValid = formControls[control].valid && isFormValid\n        }\n    }\n    return isFormValid\n}","import React from 'react'\nimport classes from './Select.module.css'\n\nconst Select = props => {\n    const htmlFor = `${props.label}-${Math.random()}`\n    return (\n        <div className={classes.Select}>\n            <label htmlFor={htmlFor}>{props.label}</label>\n            <select\n                id={htmlFor}\n                value={props.value}\n                onChange={props.onChange}\n            >\n                {props.options.map((option, index) => {\n                    return (\n                        <option\n                            value={option.value}\n                            key={option.value + index}\n                        >\n                            {option.text}\n                        </option>\n                    )\n                })}\n            </select>\n        </div>\n    )\n}\n\nexport default Select","import React, { Component } from 'react'\nimport classes from './QuizCreator.module.css'\nimport Button from '../../components/UI/Button/Button'\nimport Input from '../../components/UI/Input/Input'\nimport { createControl, validate, validateForm } from '../../form/formFramework'\nimport Select from '../../components/UI/Select/Select'\nimport axios from '../../axios/axios-quiz'\n\nfunction createOptionControl(number) {\n    return createControl({\n        label: `Вариант ${number}`,\n        errorMessage: 'Поле не может быть пустым',\n        id: number,\n    }, { required: true })\n}\n\nfunction createFormControls() {\n    return {\n        question: createControl({\n            label: 'Введите вопрос',\n            errorMessage: 'Вопрос не может быть пустым',\n        }, { required: true }),\n        option1: createOptionControl(1),\n        option2: createOptionControl(2),\n        option3: createOptionControl(3),\n        option4: createOptionControl(4),\n    }\n}\n\nexport default class QuizCreator extends Component {\n\n    state = {\n        quiz: [],\n        isFormValid: false,\n        rightAnswerId: 1,\n        formControls: createFormControls()\n    }\n\n    submitHandler = event => {\n        event.preventDefault()\n    }\n\n    addQuestionHandler = event => {\n        event.preventDefault()\n\n        const quiz = this.state.quiz.concat()\n        const index = quiz.length + 1\n\n        const { question, option1, option2, option3, option4 } = this.state.formControls\n\n        const questionItem = {\n            question: question.value,\n            id: index,\n            rightAnswerId: this.state.rightAnswerId,\n            answers: [\n                { text: option1.value, id: option1.id },\n                { text: option2.value, id: option2.id },\n                { text: option3.value, id: option3.id },\n                { text: option4.value, id: option4.id },\n            ]\n        }\n        quiz.push(questionItem)\n\n        this.setState({\n            quiz,\n            isFormValid: false,\n            rightAnswerId: 1,\n            formControls: createFormControls()\n        })\n    }\n\n    createQuizHandler = async event => {\n        event.preventDefault()\n        try {\n            await axios.post('/quizes.json', this.state.quiz)\n            this.setState({\n                quiz: [],\n                isFormValid: false,\n                rightAnswerId: 1,\n                formControls: createFormControls()\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    changeHandler = (value, controlName) => {\n        const formControls = { ...this.state.formControls }\n        const control = { ...formControls[controlName] }\n\n        control.touched = true\n        control.value = value\n        control.valid = validate(control.value, control.validation)\n\n        formControls[controlName] = control\n\n        this.setState({\n            formControls,\n            isFormValid: validateForm(formControls),\n        })\n    }\n\n    renderControls() {\n        return Object.keys(this.state.formControls)\n            .map((controlName, index) => {\n                const control = this.state.formControls[controlName]\n                return (\n                    <React.Fragment key={controlName + index}>\n                        <Input\n                            label={control.label}\n                            value={control.value}\n                            valid={control.valid}\n                            shouldValidate={!!control.shouldValidate}\n                            touched={control.touched}\n                            errorMessage={control.errorMessage}\n                            onChange={event => this.changeHandler(event.target.value, controlName)}\n                        />\n                        {index === 0 ? <hr /> : null}\n                    </React.Fragment>\n                )\n            })\n    }\n\n    selectChangeHandler = event => {\n        this.setState({\n            rightAnswerId: +event.target.value\n        })\n    }\n\n    render() {\n        const select = <Select\n            label=\"Выберите правильный ответ\"\n            value={this.state.rightAnswerId}\n            onChange={this.selectChangeHandler}\n            options={[\n                { text: 1, value: 1 },\n                { text: 2, value: 2 },\n                { text: 3, value: 3 },\n                { text: 4, value: 4 },\n            ]}\n        />\n        return (\n            <div className={classes.QuizCreator} >\n                <div>\n                    <h1>Создание теста</h1>\n\n                    <form onSubmit={this.submitHandler}>\n\n                        {this.renderControls()}\n\n                        {select}\n\n                        <Button\n                            type=\"primary\"\n                            onClick={this.addQuestionHandler}\n                            disabled={!this.state.isFormValid}\n                        >\n                            Добавить вопрос\n                        </Button>\n\n                        <Button\n                            type=\"success\"\n                            onClick={this.createQuizHandler}\n                            disabled={this.state.quiz.length === 0}\n                        >\n                            Создать тест\n                        </Button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Layout from './hoc/Layout/Layout'\nimport { Route, Switch } from 'react-router-dom'\nimport Quiz from './containers/Quiz/Quiz'\nimport Auth from './containers/Auth/Auth'\nimport QuizList from './containers/QuizList/QuizList'\nimport QuizCreator from './containers/QuizCreator/QuizCreator'\n\nclass App extends Component {\n  render() {\n    return (\n      <Layout>\n        <Switch>\n          <Route path='/auth' component={Auth} />\n          <Route path='/quiz-creator' component={QuizCreator} />\n          <Route path='/quiz/:id' component={Quiz} />\n          <Route path='/' component={QuizList} />\n        </Switch>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nconst app = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}